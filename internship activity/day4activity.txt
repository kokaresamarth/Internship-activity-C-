/*Internship activity - <Day 4>
  Project: Rapido Vision Measuring System.
  Task: <C++ activity>
  Compiler:Windows 10
  IDE:VS Code

Q1.C++ Program to Multiply Two Matrix Using Multi-dimensional Arrays
*/

#include <iostream>  
using namespace std;  
int main()  
{  
int a[10][10],b[10][10],mul[10][10],r,c,i,j,k;    
cout<<"enter the number of row=";    
cin>>r;    
cout<<"enter the number of column=";    
cin>>c;    
cout<<"enter the first matrix element=\n";    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
cin>>a[i][j];  
}    
}    
cout<<"enter the second matrix element=\n";    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
cin>>b[i][j];    
}    
}    
cout<<"multiply of the matrix=\n";    
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
mul[i][j]=0;    
for(k=0;k<c;k++)    
{    
mul[i][j]+=a[i][k]*b[k][j];    
}    
}    
}      
for(i=0;i<r;i++)    
{    
for(j=0;j<c;j++)    
{    
cout<<mul[i][j]<<" ";    
}    
cout<<"\n";    
}    
return 0;  
}    

Output:
enter the number of row=3
enter the number of column=3
enter the first matrix element=
1 2 3
4 5 6 
7 8 9
enter the second matrix element=
2 4 6
1 2 3
4 5 6
multiply of the matrix=
16 23 30 
37 56 75 
58 89 120 


Q2.C++ program to find the mean, median, and mode of a set of numbers.

*/
#include <iostream>
using namespace std;
int main() {
    int n;
    cout << "Enter the number of elements: ";
    cin >> n;
    int nums[n];
    cout << "Enter the elements: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }
    double sum = 0;
    for (int i = 0; i < n; i++) {
        sum += nums[i];
    }
    double mean = sum / n;
    cout << "Mean: " << mean << endl;
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (nums[j] > nums[j + 1]) {
                int temp = nums[j];
                nums[j] = nums[j + 1];
                nums[j + 1] = temp;
            }
        }
    }
    double median;
    if (n % 2 == 0) {
        median = (nums[n / 2 - 1] + nums[n / 2]) / 2.0;
    } else {
        median = nums[n / 2];
    }
    cout << "Median: " << median << endl;
}
 
Output:
Enter the number of elements: 5
Enter the elements: 1 2 3 4 5
Mean: 3
Median: 3

Q3.C++ Program to Print Pascal Triangle

*/

#include<iostream>
using namespace std;
 
int main()
{
    int rows;
    cout << "Enter the number of rows : ";
    cin >> rows;
    cout << endl;
 
    for (int i = 0; i < rows; i++)
    {
        int val = 1;
        for (int j = 1; j < (rows - i); j++)
        {
            cout << "   ";
        }
        for (int k = 0; k <= i; k++)
        {
            cout << "      " << val;
            val = val * (i - k) / (k + 1);
        }
        cout << endl << endl;
    }
    cout << endl;
    return 0;
}

Output:
Enter the number of rows : 5

                  1

               1      1

            1      2      1

         1      3      3      1

      1      4      6      4      1


C++ program to input a number and find the sum of even digits using pointer variables.


*/

#include <iostream>
#include <conio.h>

using namespace std;

int main()
{
    int i,n,s,d,*x,*nm,*sum,*dg;
    x=&i;
    nm=&n;
    sum=&s;
    dg=&d;
    *sum=0;

    cout<<"Enter a number ";
    cin>>*nm;

    while(*nm>0)
    {
        *dg=*nm%10;
        if(*dg % 2==0)
        {
            *sum=*sum+*dg;
        }
        *nm=*nm/10;
    }

    cout<<"Sum of even digits = "<<*sum;
    return 0;
}

Output:
Enter a number 67823
Sum of even digits = 16


Q5:find missing number in a sequence in array in c++ using pointers.

*/

#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "Enter the total number of elements (n) in the sequence: ";
    cin >> n;
    int* arr = new int[n - 1];
    cout << "Enter the " << n - 1 << " elements of the sequence: ";
    for (int i = 0; i < n - 1; ++i) {
        cin >> *(arr + i);  
    }
    int expected_sum = (n * (n + 1)) / 2;
    int actual_sum = 0;
    for (int i = 0; i < n - 1; ++i) {
        actual_sum += *(arr + i);  
    }
    int missing_number = expected_sum - actual_sum;
    cout << "The missing number in the sequence is: " << missing_number << endl;
    return 0;
}

Output:
Enter the total number of elements (n) in the sequence: 5
Enter the 4 elements of the sequence: 1 3 4 5
The missing number in the sequence is: 2
